import esimport xaimport xa.languageimport xa.loggingimport xa.settingimport playerlibimport popuplibfrom xa import xa#plugin informationinfo = es.AddonInfo()info.name           = "XA:Players"info.version        = "0.1"info.author         = "Hunter"info.url            = "http://forums.mattie.info"info.description    = "Clone of Mani Player Players feature for XA"info.tags           = "admin options players"manage_choice = {}manage_method = {}manage_display = {}manage_target = {}xaplayers                   = xa.register('xaplayers')xalanguage                  = xa.language.getLanguage(xaplayers)xa_adminkick_anonymous      = xa.setting.createVariable(xaplayers, 'adminkick_anonymous', 0)xa_adminban_anonymous       = xa.setting.createVariable(xaplayers, 'adminban_anonymous', 0)xa_ban_time                 = xa.setting.createVariable(xaplayers, 'ban_time', 0)def load():    #Load Function for Player Settings for XA.    xaplayermenu = popuplib.easymenu("xaplayermenu", "_tempcore", _select_option)    xaplayermenu.settitle(xalanguage["choose option"])    xaplayers.addMenu("xaplayermenu", xalanguage["manage players"], "xaplayermenu", "punish_player", "#admin")        xaplayertargetmenu = popuplib.easymenu("xaplayertargetmenu", "_tempcore", _select_target)    xaplayertargetmenu.settitle(xalanguage["choose target"])    xaplayertargetmenu.addoption("player", xalanguage["select a player"])    xaplayertargetmenu.addoption("team3", xalanguage["counter terrorists"])    xaplayertargetmenu.addoption("team2", xalanguage["terrorists"])    xaplayertargetmenu.addoption("all", xalanguage["all players"])        registerPunishment("kick", xalanguage["kick"], _manage_kick)    registerPunishment("ban", xalanguage["ban"], _manage_ban)def unload():    unRegisterPunishment("kick")    unRegisterPunishment("ban")    popuplib.delete("xaplayermenu")    popuplib.delete("xaplayertargetmenu")    xa.unRegister(xaplayers)    def _select_option(userid, choice, name):    manage_choice[userid] = choice    if not userid in manage_target:        popuplib.send("xaplayertargetmenu", userid)    else:        _manage_player(manage_target[userid], manage_choice[userid], userid)        manage_target.remove(userid)    def _select_target(userid, choice, name):    if choice == "player":        menu = popuplib.construct("xapunishplayermenu", "players", "#alive")        menu.settitle(xalanguage["choose player"])        menu.menuselectfb = _select_player        menu.send(userid)    else:        if choice == "team3":            playerlist = playerlib.getUseridList("#ct")        elif choice == "team2":            playerlist = playerlib.getUseridList("#t")        elif choice == "all":            playerlist = es.getUseridList()        for player in playerlist:            _manage_player(player, manage_choice[userid], userid)            def _select_player(userid, choice, name):    _manage_player(choice, manage_choice[userid], userid)def _manage_player(userid, option, adminid):    if callable(manage_method[option]):        xa.logging.log('xaplayers', "Admin "+str(adminid)+ " used option "+str(option)+" on player "+str(userid))        manage_method[option](userid, adminid)    else:        es.dbgmsg(0, "xaplayers.py: Cannot find method '"+str(manage_method[option])+"'!")def registerPunishment(option, name, method):    if not option in manage_method:        manage_method[option] = method        manage_display[option] = name        xaplayermenu = popuplib.find("xaplayermenu")        xaplayermenu.addoption(option, name, 1)        return True    else:        return False    def unRegisterPunishment(option):    if option in manage_method:        xaplayermenu = popuplib.find("xaplayermenu")        xaplayermenu.addoption(option, manage_display[option], 0)        manage_method.remove(option)        manage_display.remove(option)        return True    else:        return False        def managePlayer(option, userid, adminid):    if option in manage_method:        _manage_player(userid, option, adminid)        return True    else:        return Falsedef sendPlayersMenu(userid, victimid):    for user in list(userid):        manage_target[user] = victimid        xaplayermenu.send(user)# The default options that ship with the moduledef _manage_kick(userid, adminid):    if str(xa_adminkick_anonymous) == '0':        tokens = {}        tokens['admin']   = es.getplayername(adminid)        tokens['user']    = es.getplayername(userid)        for user in playerlib.getPlayerList():            es.tell(user, xalanguage("admin kick", tokens, user.get("lang")))    es.server.cmd("kickid "+str(userid)+" Kicked by Admin")def _manage_ban(userid, adminid):    if str(xa_adminban_anonymous) == '0':        tokens = {}        tokens['admin']   = es.getplayername(adminid)        tokens['user']    = es.getplayername(userid)        for user in playerlib.getPlayerList():            if int(xa_ban_time) > 0:                tokens['time']    = xalanguage("bantime", {'min': str(xa_ban_time)}, user.get("lang"))            else:                tokens['time']    = xalanguage("banperm", {}, user.get("lang"))            es.tell(user, xalanguage("admin ban", tokens, user.get("lang")))    es.server.cmd("banid "+str(xa_ban_time)+" "+str(userid)+" kick")